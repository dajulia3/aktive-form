import org.gradle.internal.jvm.Jvm

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.40"
    id "application"
    id 'java-library'
    id 'maven-publish'
}

version "0.1"
group "com.djulia"

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jcenter.bintray.com" }
    maven { url 'https://jitpack.io' }
}

dependencies {

    compileOnly("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    compileClasspath("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    compileClasspath("ch.qos.logback:logback-classic:1.2.3")
    api("io.ktor:ktor-server-core:$ktor_version")

    //Jackson
    api("io.ktor:ktor-jackson:$ktor_version")

    //Test libraries
    testImplementation("io.strikt:strikt-core:0.21.1")
    testImplementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.9")

    //Ktor Tests
    testImplementation "io.ktor:ktor-thymeleaf:$ktor_version"
    testImplementation("io.ktor:ktor-server-tests:$ktor_version")
    testImplementation("io.ktor:ktor-server-netty:$ktor_version")
    testImplementation("io.ktor:ktor-server-host-common:$ktor_version")

    //Integration Test Libs
    testImplementation("io.rest-assured:rest-assured:3.0.0")
    testImplementation("uk.co.datumedge:hamcrest-json:0.2")
    testImplementation("com.fasterxml.jackson.core:jackson-databind:2.9.9")
    testImplementation("org.junit.jupiter:junit-jupiter:5.5.0")
}


mainClassName = "com.djulia.aktive_form.App"

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ['-Xjsr305=strict', "-Xuse-experimental=kotlin.Experimental", "-progressive"]
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ['-Xjsr305=strict']
        javaParameters = true
    }
}

task jvmVersion {
    println "current JVM: ${Jvm.current()}"
    println "current Kotlin Version $kotlin_version"
}
